{"version":3,"sources":["context.js","TodoList/TodoElement.js","TodoList/Todo.js","images/ooops.png","NoTodos.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","input","marginRight","button","background","border","fontSize","cursor","TodoElement","data","index","useContext","removeTodo","toggleTodo","classes","completed","push","className","join","checked","type","style","onChange","id","title","onClick","ul","listStyle","margin","padding","TodoList","todos","map","element","notodos","width","display","justifyContent","textAlign","img","height","NoTodos","src","ooops","alt","App","console","log","localStorage","JSON","stringify","useState","parse","setTodos","Provider","value","filter","todo","length","Todo","document","getElementById","trim","concat","Date","now","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4KAIeA,EAFDC,IAAMC,gB,OCEhBC,EAAS,CACTC,MAAO,CACHC,YAAa,QAEjBC,OAAQ,CACJC,WAAY,OACZC,OAAQ,OACRC,SAAU,OACVC,OAAQ,YA4BDC,MAxBf,YAAoC,IAAdC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,MACxB,EAAmCC,qBAAWd,GAAtCe,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAChBC,EAAU,CAAC,YAKf,OAHIL,EAAKM,WACLD,EAAQE,KAAK,QAGb,qBAAIC,UAAWH,EAAQI,KAAK,KAA5B,UACI,iCACI,uBAAOC,QAASV,EAAKM,UAAWK,KAAK,WAAWC,MAAOrB,EAAOC,MAAOqB,SAAU,WAAOT,EAAWJ,EAAKc,OACtG,mCAASb,EAAM,EAAf,QACCD,EAAKe,SAGV,wBAAQH,MAAOrB,EAAOG,OAAQsB,QAAS,kBAAMb,EAAWH,EAAKc,KAA7D,sBC3BRvB,EAAS,CACT0B,GAAK,CACDC,UAAW,OACXC,OAAQ,EACRC,QAAS,IAoBFC,MAhBf,YAA4B,IAATC,EAAQ,EAARA,MACf,OACI,oBAAIV,MAAOrB,EAAO0B,GAAlB,SAEIK,EAAMC,KAAI,SAACC,EAASvB,GAChB,OAAO,cAAC,EAAD,CAAaD,KAAMwB,EAASvB,MAAOA,GAAYuB,EAAQV,UCjB/D,MAA0B,kCCGnCvB,EAAS,CACXkC,QAAS,CACLC,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,UAAW,UAEfC,IAAK,CACDJ,MAAO,QACPK,OAAQ,UAeDC,MAXf,WACI,OACI,qBAAKpB,MAAOrB,EAAOkC,QAAnB,SACI,8BACA,qBAAKb,MAAOrB,EAAOuC,IAAKG,IAAKC,EAAOC,IAAI,+DAAgC,uBADxE,mECmDGC,MAjEf,WAEE,IAAM7C,EAAS,CACbC,MAAO,CACL4B,QAAS,WACTzB,WAAY,QACZC,OAAQ,4BACRC,SAAU,QAEZH,OAAQ,CACNC,WAAY,QACZyB,QAAS,WACTxB,OAAQ,4BACRC,SAAU,OACVC,OAAQ,YAIZuC,QAAQC,IAAI,UAEPC,aAAajB,QAChBiB,aAAajB,MAAQkB,KAAKC,UAAU,KAGtC,MAAwBpD,IAAMqD,SAASF,KAAKG,MAAMJ,aAAajB,QAA/D,mBAAKA,EAAL,KAAYsB,EAAZ,KA0BA,OAFAL,aAAajB,MAAQkB,KAAKC,UAAUnB,GAGlC,cAAC,EAAQuB,SAAT,CAAkBC,MAAO,CAAC3C,WAP5B,SAAoBW,GAClB8B,EAAStB,EAAMyB,QAAO,SAAAC,GAAI,OAAIA,EAAKlC,KAAOA,OAMJV,WAhBxC,SAAoBU,GAClB8B,EAAStB,EAAMC,KAAI,SAAAyB,GAIjB,OAHIA,EAAKlC,KAAOA,IACdkC,EAAK1C,WAAa0C,EAAK1C,WAElB0C,QAWT,SACE,sBAAKxC,UAAU,UAAf,UACE,uDACCc,EAAM2B,OAAS,cAACC,EAAD,CAAU5B,MAAOA,IAAY,cAAC,EAAD,IAC7C,iCACE,uBAAOR,GAAG,YAAYH,KAAK,OAAOC,MAAOrB,EAAOC,QAChD,uBAAOmB,KAAK,SAASC,MAAOrB,EAAOG,OAAQsB,QA/BnD,WACE,IAAIhB,EAAOmD,SAASC,eAAe,aAAaN,MAC5C9C,EAAKqD,QACPT,EAAStB,EAAMgC,OAAO,CAAC,CAACxC,GAAIyC,KAAKC,MAAMC,KAAKC,SAAUpD,WAAW,EAAOS,MAAOf,MAEjFmD,SAASC,eAAe,aAAaN,MAAQ,GAC7CT,QAAQC,IAAItC,IAyB2D8C,MAAM,eClDlEa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,K","file":"static/js/main.deff577a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nlet Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nlet styles = {\r\n    input: {\r\n        marginRight: '1rem'\r\n    },\r\n    button: {\r\n        background: 'none',\r\n        border: 'none',\r\n        fontSize: '18px',\r\n        cursor: 'pointer'\r\n    }\r\n}\r\n\r\nfunction TodoElement({data, index}){\r\n    const { removeTodo, toggleTodo } = useContext(Context)\r\n    let classes = [\"todoItem\"]\r\n\r\n    if (data.completed) {\r\n        classes.push('done')\r\n    }\r\n    return (\r\n        <li className={classes.join(\" \")}>\r\n            <span>\r\n                <input checked={data.completed} type=\"checkbox\" style={styles.input} onChange={() => {toggleTodo(data.id)}}/>\r\n                <strong>{index+1}. </strong> \r\n                {data.title}\r\n            </span>\r\n\r\n            <button style={styles.button} onClick={() => removeTodo(data.id)}>&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoElement.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired\r\n}\r\nexport default TodoElement","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoElement from \"./TodoElement\"\r\n\r\nlet styles = {\r\n    ul : {\r\n        listStyle: \"none\",\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList({todos}) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {\r\n            todos.map((element, index) => {\r\n                return <TodoElement data={element} index={index} key={element.id} />\r\n            })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default TodoList","export default __webpack_public_path__ + \"static/media/ooops.693889be.png\";","import React from 'react'\r\nimport ooops from './images/ooops.png'\r\n\r\nconst styles = {\r\n    notodos: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n    },\r\n    img: {\r\n        width: \"128px\",\r\n        height: \"128px\"\r\n    }\r\n}\r\n\r\nfunction NoTodos() {\r\n    return (\r\n        <div style={styles.notodos}>\r\n            <p>\r\n            <img style={styles.img} src={ooops} alt=\"You have no any todos ðŸ˜²ðŸ˜²ðŸ˜²\"/><br />\r\n            You have no any todos ðŸ˜²ðŸ˜²ðŸ˜²</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NoTodos","import React from 'react'\nimport TodoList from './TodoList/Todo'\nimport Context from './context'\nimport NoTodos from './NoTodos'\n\nfunction App() {\n\n  const styles = {\n    input: {\n      padding: \"6px 12px\",\n      background: \"white\",\n      border: \"1px solid rgba(0,0,0,0.1)\",\n      fontSize: \"18pt\"\n    },\n    button: {\n      background: 'white',\n      padding: \"6px 12px\",\n      border: \"1px solid rgba(0,0,0,0.1)\",\n      fontSize: '18pt',\n      cursor: 'pointer'\n    }\n  }\n\n  console.log(\"UPDATE\")\n\n  if (!localStorage.todos) {\n    localStorage.todos = JSON.stringify([])\n  }\n\n  let [todos, setTodos] = React.useState(JSON.parse(localStorage.todos))\n\n  function someNewTodo(){\n    let data = document.getElementById(\"todoInput\").value\n    if (data.trim()){\n      setTodos(todos.concat([{id: Date.now()*Math.random(), completed: false, title: data}]))\n    }\n    document.getElementById(\"todoInput\").value = \"\"\n    console.log(data)\n  }\n  \n  function toggleTodo(id){\n    setTodos(todos.map(todo => {\n      if (todo.id === id){\n        todo.completed = !todo.completed\n      }\n      return todo\n    }))\n  }\n\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id))\n  } \n\n  localStorage.todos = JSON.stringify(todos)\n\n  return (\n    <Context.Provider value={{removeTodo, toggleTodo}}>\n      <div className=\"wrapper\">\n        <h1>Very Simple Todo List</h1>\n        {todos.length ? <TodoList todos={todos} /> : <NoTodos />}\n        <span>\n          <input id=\"todoInput\" type=\"text\" style={styles.input} />\n          <input type=\"submit\" style={styles.button} onClick={someNewTodo} value=\"+\" />\n        </span>\n      </div>\n    </Context.Provider>\n  );\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}